SSR-
◾️ It refers to the generation of HTML Components of a webpage on the server side.

◾️ When the browser requests a SSR webpage, it will receive a fully formed HTML webpage with all the components generated in it. All the browser has to do is to parse the HTML to generate the HTML DOM & display the webpage.

◾️ Basically It’s done in 2 ways-
1. Dynamic SSR - Here the HTML components of a webpage will be generated dynamically by the server at the time browser will make a request for it.

2. Pre rending - Here the HTML components are pre-generated on the server side during the build time & this static HTML file will be returned every time a browser will make a request for the webpage.

Pros ✔️-
➖ Faster Load Time for the initial page rendering - All the browser has to do is to parse the HTML & display it immediately.

➖ Better SEO & Page Ranking - Since the HTML is fully formed on the server side, web crawlers can easily index the webpage.

Cons ⛔️-
➖ For dynamic SSR, as the traffic increases, server load increases.

➖ Since every navigation involves a Round trip time, SSR has poor responsiveness for low or no internet connectivity.

👉 CSR-
◾️ In CSR, the HTML components are generated by executing the #javascript code within the browser & the browser will manipulate the HTML DOM to build the HTML nodes.

◾️ When the browser request a CSR webpage, the initial request returns a minimal HTML file that serves as application container & it primarily contains a link to a bundle file (of React/Vue etc.). That’s why they are also known as "Single Page Applications (SPA)".

◾️ Here the browser needs to fully download the bundle linked to the minimal HTML and then run it inside the browser to generate the webpage's HTML DOM. Now when we clicked over any route the browser will manipulate the client side DOM to render the content instead of asking it from the server.

Pros ✔️-
➖ Extremely fast & responsive after the initial load

Cons ⛔️-
➖ Long initial Load time as the browser have to wait for entire JS bundle to be downloaded & the it will execute it. Code Splitting and Lazy loading can be used to deal with this problem (It will be our next post, so stay tuned 😀)